<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MantenimientoBase</name>
    </assembly>
    <members>
        <member name="T:MantenimientoBase.MantenimentBase">
            <summary>
            Clase base de la cual hereden todas la clases que necesitan hacer un 
            mantenimiento de una tabla de la base de datos
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.dts">
            <summary>
            Definimos un dataset
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.CDB">
            <summary>
            Definimos la ConectionClass
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.bEsNou">
            <summary>
            Boolean que nos indica si estamos haciendo un insert o no
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.query">
            <summary>
            Consulta que se va a hacer a la DB
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.#ctor">
            <summary>
            Constructor por defecto de la clase MantenimentBase
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.Inicializaciones">
            <summary>
            Aqui hacemos todas las instancias que necesitamos, llenamos el DataGridView, y definimos los parametros necesarios
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.RellenarDataGrid(System.Data.DataSet)">
            <summary>
            Metodo que sirve para rellenar el DataGridView
            </summary>
            <param name="dataset">Dataset que contiene los datos de la consulta que hemos hecho a la Db</param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.BindDades">
            <summary>
            Con este metodo hacemos que cuando pulsamos un campo del datagrid,
            se muestren los datos en los SDSTextBox
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.QuitarBindDades">
            <summary>
            Con este metodo deshacemos que cuando pulsemos un campo en el datagrid 
            se muestren los datos en el SDSTextBox
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.AñadirFila">
            <summary>
            Añade una fila vacia al DataGridView, para posteriormente poder hacer
            el insert
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.Validar(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.BtnUpdate_Click(System.Object,System.EventArgs)">
            <summary>
            Este evento primero comprueba si es un insert y si es este caso insert una 
            fila y luego compara la informacion que le pasamos en el dataset con la info 
            de la DB y cambia en la DB lo que encuentra diferente en el dataset, y luego
            activa los bindings otra vez, y sino hace la comparacion directamente
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.BtnInsert_Click(System.Object,System.EventArgs)">
            <summary>
            Este evento quita los bindings y pone el bool EsNou a true
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.FrmMant_Table_Load(System.Object,System.EventArgs)">
            <summary>
            Este evento carga las instancias y las partes graficas ejecutando para ello
            los metodos Inicializaciones y Actualizar
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.Actualizar">
            <summary>
            Este metodo se encarga de actualizar algunas partes visuales y algunas partes
            del configurationManager
            </summary>
        </member>
        <member name="F:MantenimientoBase.MantenimentBase.components">
            <summary>
            Variable del diseñador necesaria.
            </summary>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.Dispose(System.Boolean)">
            <summary>
            Limpiar los recursos que se estén usando.
            </summary>
            <param name="disposing">true si los recursos administrados se deben desechar; false en caso contrario.</param>
        </member>
        <member name="M:MantenimientoBase.MantenimentBase.InitializeComponent">
            <summary>
            Método necesario para admitir el Diseñador. No se puede modificar
            el contenido de este método con el editor de código.
            </summary>
        </member>
        <member name="M:MantenimientoBase.Program.Main">
            <summary>
            Punto de entrada principal para la aplicación.
            </summary>
        </member>
        <member name="T:MantenimientoBase.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:MantenimientoBase.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:MantenimientoBase.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
    </members>
</doc>
